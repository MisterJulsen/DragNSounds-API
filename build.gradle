plugins {
    id 'dev.architectury.loom' version '1.6-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    group = rootProject.maven_group
    version = "$rootProject.minecraft_version-$rootProject.mod_version"
}

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'

    def includeDependencies = rootProject.hasProperty('includeDependencies') && rootProject.includeDependencies.toBoolean()

    base {
        archivesName = "$rootProject.archives_name-$project.name"
    }

    repositories {
        maven { url = "file:///C:/Users/julia/.m2/github/modsrepo/maven/" } // DragonLib
        maven { url = "https://raw.githubusercontent.com/MisterJulsen/modsrepo/main/maven" } // DragonLib
        maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" } // Forge Config API Port
        maven { url = "https://maven.parchmentmc.org" } // ParchmentMC
        maven { url = "https://mvnrepository.com/artifact/ws.schild/jave-all-deps"} // jave
        maven { url = "https://maven.terraformersmc.com/" } // ModMenu
    }
        
    gradle.startParameter.taskNames.each { taskName ->
        rootProject.includeDependencies = !taskName.contains("publish".toLowerCase())
    }

    dependencies {
        minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-${rootProject.minecraft_version}:${rootProject.parchment_version}@zip")
        }
    }

    java {
        withSourcesJar()
        withJavadocJar()

        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    javadoc {
        options {
            title = "DragNSounds API ${rootProject.release_channel}-${rootProject.mod_version}"
            tags("apiNote:a:API Note:")
            tags("implNote:a:Impl Note:")
            tags("implSpec:a:Impl Spec:")
            tags("related:a:Related:")
            tags("example:a:Examples:")
            tags("side:a:Valid on side:")
        }
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 17
    }

    // Configure Maven publishing.
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = rootProject.archives_name + "-" + project.name             
                from components.java
            }
        }

        repositories {
            maven {
                name "GitHub"
                url "file://${System.getProperty('user.home')}/.m2/github/modsrepo/maven"
            }
        }
    }
}
